software engineering method (incremental model):
- model is designed, implemented and tested incrementally till the product is finished

- in this case, final vision was to implement a chord node with virtual node functionality
- initial model was to first implement system to use a single node when started
- additionally, the base protocol would be implemented then time permitting, extensions to the protocol as outlined in the paper would be added

** requirements analysis **
-These would be picked out from the Chord academic paper; first selecting the minimum number of functions required to have a working implementation of the protocol
	- hashing (SHA-1)
	- scalable key location (finger tables) (Fig.5)
	- node create, join, stabilize
- failure and replication functions would be implemented if time permitted
	- transferring keys during voluntary node departures	
	- successor list to improve lookup robustness

** design **
- system will be designed to function as a library that other apps can use
- will have a top layer through which external applications can do lookup requests. Start/stop network.
- took a layered approach to the software services. transport layer -> node (storage) -> Top layer
- Advantage of this is that transport or storage layer implementations could be swapped which maintaining the same interfaces for the chord logic to interact with.

** implementation **
* OTP structure
- explain what OTP is
- top layer that starts supervised processes
- nodes are genservers
* data structures
- representing finger table. Initially, had thought of literally translating from the paper. (start, interval, successor). But realised its pointless storing intervals
- representing a node entry
- dynamic transport layer imports
* maintaining state
- node state
* transport layer
- mapping nodes to processes. Initial idea was using an agent/registry. but as pids can change if a genserver is restarted, this wasn't feasible
- assigned names to each node process and used GenServer.whereis to map the name to pid.

** Professional issues **
- Licensing:- are the p2p lookup schemes promoting piracy? e.g. Napster, Gnutella. (Look into current ones being used in that file sharing space)
- Privacy:- the protocols essentially match an ID to a node address. With recent laws classifying IP addresses as personally identifiable info, this could be a privacy concern. Reason being that a rogue node might leak these addresses. Or they could be used to map to users who are pirating files. (look into legality of that)

